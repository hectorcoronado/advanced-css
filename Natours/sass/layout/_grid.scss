.row {
    max-width: $grid-width;
    margin: 0 auto;

    // remove `margin-bottom` from last row
    &:not(:last-child) {
        margin-bottom: $gutter-vertical;
    }

    @include clearfix;

    /** we use an attribute selector to apply style to *all* columns at once 
      * - we're choosing all elements with a class starting with `col`
      * - that's what the `^=` operator does (chooses things starting with something)
      */
    [class^="col-"] {
        float: left;

        &:not(:last-child) {
            margin-right: $gutter-horizontal;
        }
    }

    // since columns are always children of rows, we can declare their styles here
    .col-1-of-2 {
        // 100% width, minus 1 gutters, divided by 2
        width: calc((100% - #{$gutter-horizontal}) / 2);
    }

    .col-1-of-3 {
        // 100% width, minus 2 gutters, divided by 3
        width: calc((100% - 2 * #{$gutter-horizontal}) / 3);
    }

    .col-1-of-4 {
        // 100% full width, minus 3 gutters, divided by 4
        width: calc((100% - 3 * #{$gutter-horizontal}) / 4);
    }

    .col-2-of-3 {
        // 2 times `1-of-3` width, plus 1 gutter
        width: calc(2 * ((100% - 2 * #{$gutter-horizontal}) / 3) + #{$gutter-horizontal});
    }

    .col-2-of-4 {
        // 2 times `1-of-4` width, plus 1 gutter
        width: calc(2 * ((100% - 3 * #{$gutter-horizontal}) / 4) + #{$gutter-horizontal});
    }

    .col-3-of-4 {
        // 3 times `1-of-4` width, plus 2 gutters
        width: calc(3 * ((100% - 3 * #{$gutter-horizontal}) / 4) + (2 * #{$gutter-horizontal}));
    }
}